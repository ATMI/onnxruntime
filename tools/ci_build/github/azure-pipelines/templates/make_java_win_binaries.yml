parameters:
- name: msbuildPlatform
  type: string
- name: java_artifact_id
  type: string
- name: assembleOnly
  type: boolean

steps:
- task: CmdLine@2
  displayName: 'Gradle assemble'
  inputs:
    script: |
      @echo on
      call gradlew.bat assemble
    workingDirectory: $(Build.SourcesDirectory)\java
    failOnStderr: true
  condition: eq( parameters.assembleOnly, true )

- task: CmdLine@2
  displayName: 'Gradle assemble and check cmake'
  inputs:
    script: |
      @echo on
      call gradlew.bat cmakeCheck -DcmakeBuildDir=$(Build.BinariesDirectory)\RelWithDebInfo
    workingDirectory: $(Build.SourcesDirectory)\java
    failOnStderr: true
  condition: ne( parameters.assembleOnly, true )

- task: CmdLine@2
  displayName: 'Copy onnxruntime jar and pom files'
  inputs:
    script: |
      set NATIVE_FOLDER=$(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage\ai\onnxruntime\native\win-x64
      mkdir %NATIVE_FOLDER%
      echo "Directories created"
      copy .\java\build\libs\*.jar $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}
    workingDirectory: $(Build.BinariesDirectory)\RelWithDebInfo

- task: CmdLine@2
  displayName: 'Extract onnxruntime jar pom file'
  inputs:
    script: |
      set artifact_id=${{ parameters.java_artifact_id }}
      jar xf onnxruntime-$(OnnxRuntimeVersion).jar META-INF\maven\com.microsoft.onnxruntime\%artifact_id%\pom.xml
      move META-INF\maven\com.microsoft.onnxruntime\%artifact_id%\pom.xml onnxruntime-$(OnnxRuntimeVersion).pom
      rd /s /q META-INF
    workingDirectory: $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}

- task: CmdLine@2
  displayName: 'Copy onnxruntime files to Native folder'
  inputs:
    script: |
      set NATIVE_FOLDER=$(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage\ai\onnxruntime\native\win-x64
      copy .\RelWithDebInfo\onnxruntime.pdb %NATIVE_FOLDER%
      copy .\RelWithDebInfo\onnxruntime4j_jni.pdb %NATIVE_FOLDER%
      copy $(Build.SourcesDirectory)\docs\Privacy.md $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage\Privacy.md
      copy $(Build.SourcesDirectory)\ThirdPartyNotices.txt $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage\ThirdPartyNotices.txt
      @echo $(OnnxRuntimeGitCommitHash) > $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage\GIT_COMMIT_ID

- task: CmdLine@2
  displayName: 'Update onnxruntime jar with pdb files and other files'
  inputs:
    script: |
      jar uf ..\onnxruntime-$(OnnxRuntimeVersion).jar ai\onnxruntime\native\win-x64\onnxruntime.pdb
      jar uf ..\onnxruntime-$(OnnxRuntimeVersion).jar ai\onnxruntime\native\win-x64\onnxruntime4j_jni.pdb
      jar uf ..\onnxruntime-$(OnnxRuntimeVersion).jar Privacy.md ThirdPartyNotices.txt GIT_COMMIT_ID
    workingDirectory: $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage
    failOnStderr: true


- task: CmdLine@2
  displayName: 'Create new testing jar'
  inputs:
    script: |
      jar cvf $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\testing.jar .
    workingDirectory: $(Build.SourcesDirectory)\java\build\classes\java\test
    failOnStderr: true
  condition: ne( parameters.assembleOnly, true )

- task: CmdLine@2
  displayName: 'Update new testing jar'
  inputs:
    script: |
      rd /s /q ai\onnxruntime\native
      jar uvf $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\testing.jar .
    workingDirectory: $(Build.SourcesDirectory)\java\build\resources\test
    failOnStderr: true
  condition: ne( parameters.assembleOnly, true )

- task: CmdLine@2
  displayName: 'clean up the build directory'
  inputs:
    script: |
      rd /s /q $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}\stage
      dir /s /b $(Build.BinariesDirectory)\onnxruntime-java-win-${{ parameters.msbuildPlatform }}
